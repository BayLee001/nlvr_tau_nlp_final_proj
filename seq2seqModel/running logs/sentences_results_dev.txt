sentence: there is a box with 2 items of only yellow and black colour
model prediction:
log_prob = -4.06, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: OR is_yellow y all_same get_box_inclusive y
inconsistent
consistent program from beam : 
log_prob = -2.99, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: is_yellow y
##############

sentence: there is a box that has four items and the three are touching the side
model prediction:
log_prob = -5.15, program = exist filter ALL_BOXES lambda_x_: equal_int 3 count filter x lambda_y_: AND equal y y is_touching_wall y Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: there are 2 boxes with only black and yellow items
model prediction:
log_prob = -1.45, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: is_black y
inconsistent
consistent program from beam : 
log_prob = -6.16, program = equal_int 2 count filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: OR is_yellow y all_same get_box_exclusive y
##############

sentence: there is exactly one tower with a black block at the base
model prediction:
log_prob = -1.93, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_bottom y
consistent
##############

sentence: there is a black tower
model prediction:
log_prob = -1.40, program = All filter ALL_ITEMS lambda_x_: AND is_black x all_same get_box_inclusive x lambda_y_: is_black y
consistent
##############

sentence: there is one tower with a yellow block over a blue block
model prediction:
log_prob = -2.74, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_yellow y
consistent
##############

sentence: there is a box with a black circle and a yellow cirlce not being of small size
model prediction:
log_prob = -3.78, program = exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_black y is_circle y all_same filter x lambda_z_: is_yellow z
inconsistent
no consistent programs in beam
##############

sentence: there is a black block as the top of a tower with three blocks
model prediction:
log_prob = -1.22, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x le 1 count filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is exactly one blue triangle touching the edge
model prediction:
log_prob = -1.52, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_blue x is_touching_wall x Side.ANY lambda_y_: AND is_blue y is_triangle y
consistent
##############

sentence: one box has 2 yellow squares
model prediction:
log_prob = -2.64, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_yellow y is_square y
consistent
##############

sentence: one of the grey square contains exactly one object which is black
model prediction:
log_prob = -2.80, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_black x all_same get_box_inclusive x
consistent
##############

sentence: ll 3 towers have at least 1 blue block
model prediction:
log_prob = -4.14, program = exist filter ALL_BOXES lambda_x_: le count x count filter ALL_ITEMS lambda_y_: AND is_blue y all_same get_box_inclusive y
consistent
##############

sentence: one tower has a yellow block on top of a blue block
model prediction:
log_prob = -3.48, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_yellow x lambda_y_: is_blue y
inconsistent
consistent program from beam : 
log_prob = -1.97, program = exist filter ALL_ITEMS lambda_x_: AND is_blue x all_same get_box_exclusive x
##############

sentence: there is a box with only 3 items of black and yellow color
model prediction:
log_prob = -2.21, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x exist filter x lambda_y_: AND is_yellow y equal y y
consistent
##############

sentence: there is a box with 4 items
model prediction:
log_prob = -1.34, program = exist filter ALL_BOXES lambda_x_: equal_int 4 count x
consistent
##############

sentence: there is a blue block as the top of a tower with at least three blocks
model prediction:
log_prob = -1.02, program = exist filter ALL_BOXES lambda_x_: AND le 3 count x exist filter x lambda_y_: AND is_blue y is_top y
consistent
##############

sentence: there is a box with only two items of black and yellow color
model prediction:
log_prob = -3.98, program = exist filter ALL_BOXES lambda_x_: AND equal_int 2 count x equal_int 1 count filter x lambda_y_: OR is_yellow y all_same get_box_inclusive y
consistent
##############

sentence: there are three triangles touching the edge
model prediction:
log_prob = -1.83, program = equal_int 3 count filter ALL_ITEMS lambda_x_: AND is_triangle x is_touching_wall x Side.ANY
consistent
##############

sentence: there are two grey boxes with atleast two black objects touching the edge
model prediction:
log_prob = -1.91, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_black x is_touching_wall x Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: each grey box contains atleast one yellow object touching the edge
model prediction:
log_prob = -4.76, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_touching_wall x Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: one tower has a yellow base
model prediction:
log_prob = -1.70, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x
inconsistent
consistent program from beam : 
log_prob = -2.20, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x
##############

sentence: there are 2 boxes with a black item on top
model prediction:
log_prob = -1.24, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there are exactly two towers with blue blocks and one of them has a black block above yellow blocks
model prediction:
log_prob = -5.01, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter get_above filter x lambda_y_: is_yellow y lambda_z_: is_black z
inconsistent
consistent program from beam : 
log_prob = -3.92, program = exist filter ALL_BOXES lambda_x_: equal_int count query_color x count filter get_above filter ALL_ITEMS lambda_y_: is_yellow y lambda_z_: is_black z
##############

sentence: there is one tower with only one block which is blue
model prediction:
log_prob = -2.42, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_blue x all_same get_box_inclusive x
consistent
##############

sentence: there is at least one tower with exactly two blocks having a blue block at the top
model prediction:
log_prob = -4.03, program = le 1 count filter ALL_BOXES lambda_x_: AND equal_int 2 count x equal_int 1 count filter x lambda_y_: AND is_blue y is_top y
consistent
##############

sentence: there is only one tower with exactly three blocks
model prediction:
log_prob = -0.33, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 3 count x
consistent
##############

sentence: there is a blue triangle closely touching the bottom of a box
model prediction:
log_prob = -2.54, program = exist filter ALL_ITEMS lambda_x_: AND AND is_blue x is_triangle x is_touching_wall x Side.BOTTOM
consistent
##############

sentence: there is one tower with a blue block at the top
model prediction:
log_prob = -3.01, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_blue x is_top x
consistent
##############

sentence: there is a box with 3 items and a black item on top
model prediction:
log_prob = -1.90, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x exist filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is only one tower with at least two yellow blocks
model prediction:
log_prob = -1.16, program = equal_int 1 count filter ALL_BOXES lambda_x_: le 2 count filter x lambda_y_: AND is_yellow y equal y y
consistent
##############

sentence: there is a tower with four blocks
model prediction:
log_prob = -1.28, program = exist filter ALL_BOXES lambda_x_: equal_int 4 count x
consistent
##############

sentence: there is 1 tower with a yellow block at the top
model prediction:
log_prob = -2.34, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x lambda_y_: AND is_yellow y is_top y
consistent
##############

sentence: there is a tower with exactly two blocks having a blue block at the top
model prediction:
log_prob = -4.06, program = exist filter ALL_BOXES lambda_x_: AND equal_int 2 count x equal_int 1 count filter x lambda_y_: AND is_blue y is_top y
consistent
##############

sentence: there is a tower which has two black blocks as the base and second blocks
model prediction:
log_prob = -3.82, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: is_black y
inconsistent
consistent program from beam : 
log_prob = -2.32, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 2 count x
##############

sentence: there is only one yellow block as the base of a tower
model prediction:
log_prob = -1.84, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x lambda_y_: equal y y
consistent
##############

sentence: there is a black block as the base of a tower with exactly three blocks
model prediction:
log_prob = -1.46, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x le 1 count filter x lambda_y_: AND is_black y is_bottom y
consistent
##############

sentence: there is a yellow block above a black block
model prediction:
log_prob = -1.81, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_yellow x lambda_y_: is_black y
inconsistent
consistent program from beam : 
log_prob = -2.78, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_black x lambda_y_: OR is_yellow y all_same get_box_inclusive y
##############

sentence: there are 3 black blocks
model prediction:
log_prob = -1.71, program = le count filter ALL_ITEMS lambda_x_: AND is_black x equal x x 3
consistent
##############

sentence: there is a tower with exactly three blocks and it has a yellow block and two blue blocks
model prediction:
log_prob = -2.54, program = exist filter ALL_BOXES lambda_x_: equal_int 3 count filter x lambda_y_: OR is_yellow y all_same get_box_inclusive y
inconsistent
consistent program from beam : 
log_prob = -3.26, program = exist filter ALL_BOXES lambda_x_: equal_int count query_color x count filter x lambda_y_: OR is_blue y all_same get_box_inclusive y
##############

sentence: there is at least one triangle closely touching the bottom of a box
model prediction:
log_prob = -3.56, program = le 1 count filter ALL_ITEMS lambda_x_: AND AND is_bottom x is_triangle x is_touching_wall x Side.BOTTOM
inconsistent
consistent program from beam : 
log_prob = -1.10, program = All filter ALL_ITEMS lambda_x_: AND is_triangle x is_touching_wall x Side.BOTTOM lambda_y_: AND equal y y is_touching_wall y Side.ANY
##############

sentence: there are 2 towers that contain black blocks
model prediction:
log_prob = -2.17, program = le 2 count filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: is_black y
inconsistent
consistent program from beam : 
log_prob = -3.65, program = equal_int 2 count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_black y equal y y
##############

sentence: ll towers contain 1 blue block
model prediction:
log_prob = -3.30, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_blue x all_same get_box_inclusive x
inconsistent
consistent program from beam : 
log_prob = -3.31, program = exist filter ALL_ITEMS lambda_x_: AND is_blue x all_same get_box_exclusive x
##############

sentence: tleast one black triangle is not touching the edge
model prediction:
log_prob = -6.20, program = le 1 count filter ALL_ITEMS lambda_x_: AND AND is_black x is_triangle x NOT is_touching_wall x Side.ANY
consistent
##############

sentence: there is a box with a black item between 2 items of the same color and no item on top of that
model prediction:
log_prob = -3.47, program = exist filter ALL_BOXES lambda_x_: equal_int count query_color x count filter ALL_ITEMS lambda_y_: AND is_black y equal y y
inconsistent
no consistent programs in beam
##############

sentence: there is a tower with only one block
model prediction:
log_prob = -1.82, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count x
consistent
##############

sentence: only 2 yellow and one black item are touching the wall
model prediction:
log_prob = -2.33, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_black x is_touching_wall x Side.ANY
consistent
##############

sentence: there is 1 tower with 2 yellow blocks
model prediction:
log_prob = -1.81, program = le 1 count filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: is_yellow y
consistent
##############

sentence: there is a tower with a yellow block a blue block and a black block
model prediction:
log_prob = -2.91, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: AND is_blue y all_same filter get_box_inclusive y lambda_z_: is_black z
inconsistent
consistent program from beam : 
log_prob = -3.51, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: AND is_yellow y all_same filter get_box_inclusive y lambda_z_: is_black z
##############

sentence: there is exactly one tower which has a yellow black at the top
model prediction:
log_prob = -7.24, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_black x is_top x lambda_y_: OR is_yellow y is_top y
inconsistent
consistent program from beam : 
log_prob = -4.42, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x
##############

sentence: there is a box with 3 items and yellow one on top
model prediction:
log_prob = -2.43, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x equal_int 1 count filter x lambda_y_: AND is_yellow y is_top y
consistent
##############

sentence: there is at least 1 square closely tocuhing a box corner
model prediction:
log_prob = -3.34, program = le 1 count filter ALL_ITEMS lambda_x_: AND AND is_square x is_touching_wall x Side.ANY is_touching_corner x Side.ANY
consistent
##############

sentence: there is a tower which has exactly two black blocks
model prediction:
log_prob = -1.28, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: is_black y
consistent
##############

sentence: there are at least two towers with a yellow block at the top
model prediction:
log_prob = -0.99, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x
consistent
##############

sentence: there is a blue object touching the edge
model prediction:
log_prob = -0.95, program = exist filter ALL_ITEMS lambda_x_: AND is_blue x is_touching_wall x Side.ANY
consistent
##############

sentence: there are exactly two towers with a blue block at the base
model prediction:
log_prob = -1.83, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: is_blue y
consistent
##############

sentence: there are two black blocks as the top of a tower
model prediction:
log_prob = -1.44, program = le 2 count filter filter ALL_ITEMS lambda_x_: AND is_black x is_top x lambda_y_: is_black y
consistent
##############

sentence: there is a box with 4 items and the black one is on top
model prediction:
log_prob = -2.93, program = exist filter ALL_BOXES lambda_x_: AND equal_int 4 count x equal_int 1 count filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there are 2 blue blocks
model prediction:
log_prob = -1.16, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_blue x equal x x
consistent
##############

sentence: there is 1 tower with a black block at the bottom
model prediction:
log_prob = -2.56, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_black x is_bottom x
inconsistent
consistent program from beam : 
log_prob = -2.98, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_black x is_bottom x lambda_y_: is_black y
##############

sentence: there are exactly two items closely touching right wall of a box
model prediction:
log_prob = -1.89, program = equal_int 2 count filter ALL_ITEMS lambda_x_: AND equal x x is_touching_wall x Side.RIGHT
consistent
##############

sentence: there is only one blue block as the base of a tower
model prediction:
log_prob = -1.67, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_blue x is_bottom x lambda_y_: is_bottom y
consistent
##############

sentence: there is a blue item closely touching right wall of a box
model prediction:
log_prob = -1.55, program = exist filter ALL_ITEMS lambda_x_: AND is_blue x is_touching_wall x Side.RIGHT
consistent
##############

sentence: the tower with four blocks has a black block at the top
model prediction:
log_prob = -1.60, program = exist filter ALL_BOXES lambda_x_: AND le 4 count x exist filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is a tower with exactly one block
model prediction:
log_prob = -2.06, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count x
consistent
##############

sentence: there is a blue square closely touching the bottom of a box
model prediction:
log_prob = -2.62, program = exist filter ALL_ITEMS lambda_x_: AND AND is_blue x is_square x is_touching_wall x Side.BOTTOM
consistent
##############

sentence: there is a box with 3 items of all 3 different colors
model prediction:
log_prob = -2.03, program = exist filter ALL_BOXES lambda_x_: equal_int 3 count query_color filter x lambda_y_: equal_int 3 count x
consistent
##############

sentence: there is a box with a yellow triangle and no blue squares
model prediction:
log_prob = -4.19, program = exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_blue y is_square y all_same filter x lambda_z_: is_yellow z
inconsistent
consistent program from beam : 
log_prob = -5.37, program = equal_int 1 count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_blue y is_triangle y
##############

sentence: black circles are touching the edge
model prediction:
log_prob = -3.18, program = exist filter ALL_ITEMS lambda_x_: AND AND is_black x is_circle x is_touching_wall x Side.ANY
consistent
##############

sentence: there is a blue circle touching an edge
model prediction:
log_prob = -1.92, program = exist filter ALL_ITEMS lambda_x_: AND AND is_blue x is_circle x is_touching_wall x Side.ANY
consistent
##############

sentence: there are 2 black triangles
model prediction:
log_prob = -1.40, program = le 2 count filter filter ALL_ITEMS lambda_x_: AND is_black x is_triangle x lambda_y_: is_black y
consistent
##############

sentence: there is a box with 3 items at most of black and blue color
model prediction:
log_prob = -2.92, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x exist filter x lambda_y_: AND is_blue y equal y y
inconsistent
no consistent programs in beam
##############

sentence: there are 2 towers with a black block at the top
model prediction:
log_prob = -1.65, program = le 2 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is 1 tower with 2 black blocks stacked together
model prediction:
log_prob = -4.58, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 2 count filter get_touching filter x lambda_y_: is_black y lambda_z_: is_black z
consistent
##############

sentence: there is a box with 4 items and the black one is on top
model prediction:
log_prob = -2.93, program = exist filter ALL_BOXES lambda_x_: AND equal_int 4 count x equal_int 1 count filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is a tower with exactly two blocks with a black block at the top
model prediction:
log_prob = -3.26, program = exist filter ALL_BOXES lambda_x_: AND equal_int 2 count x equal_int 1 count filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there are at least 3 blue blocks
model prediction:
log_prob = -0.96, program = le 3 count filter ALL_ITEMS lambda_x_: AND is_blue x equal x x
consistent
##############

sentence: there is at least one tower with three blocks
model prediction:
log_prob = -1.14, program = le 1 count filter ALL_BOXES lambda_x_: equal_int 3 count x
consistent
##############

sentence: there is only 1 tower than contains black blccks
model prediction:
log_prob = -1.97, program = equal_int 1 count filter ALL_BOXES lambda_x_: le count x count filter x lambda_y_: is_black y
inconsistent
no consistent programs in beam
##############

sentence: there is a tower with a black block and two blue blocks
model prediction:
log_prob = -3.19, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_blue y all_same filter get_box_inclusive y lambda_z_: is_black z
inconsistent
consistent program from beam : 
log_prob = -1.20, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: is_blue y
##############

sentence: there are 2 towers that contain at least 1 black block
model prediction:
log_prob = -2.00, program = le 2 count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_black y equal y y
consistent
##############

sentence: there is one tower with a black block above a black block
model prediction:
log_prob = -1.97, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_black x lambda_y_: is_black y
consistent
##############

sentence: one of the grey square has exactly seven objects
model prediction:
log_prob = -1.01, program = le 1 count filter ALL_BOXES lambda_x_: equal_int 7 count x
consistent
##############

sentence: one of the grey box has exactly three objects one of which is a circle
model prediction:
log_prob = -2.64, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 3 count filter x lambda_y_: is_circle y
inconsistent
consistent program from beam : 
log_prob = -3.69, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x exist filter x lambda_y_: is_circle y
##############

sentence: there are 3 yellow squares
model prediction:
log_prob = -2.41, program = equal_int 3 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_square x
consistent
##############

sentence: there is no yellow block as the base of a tower
model prediction:
log_prob = -0.99, program = NOT exist filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x
consistent
##############

sentence: there is a yellow block as the top of a tower
model prediction:
log_prob = -1.43, program = exist filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x
consistent
##############

sentence: there is 1 tower with a blue block at the top
model prediction:
log_prob = -2.93, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_blue x is_top x lambda_y_: is_blue y
consistent
##############

sentence: there is exactly one tower with a yellow block at base
model prediction:
log_prob = -0.91, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: AND is_yellow y is_bottom y
consistent
##############

sentence: there is no yellow block above a blue block
model prediction:
log_prob = -2.41, program = NOT le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_yellow x lambda_y_: is_blue y
inconsistent
consistent program from beam : 
log_prob = -4.00, program = NOT exist filter ALL_ITEMS lambda_x_: AND is_blue x all_same filter get_box_inclusive x lambda_y_: is_yellow y
##############

sentence: there is 1 tower with a yellow block at the top
model prediction:
log_prob = -2.34, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x lambda_y_: AND is_yellow y is_top y
consistent
##############

sentence: there are 2 towers with only 1 yellow block
model prediction:
log_prob = -2.17, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_yellow x all_same get_box_inclusive x
consistent
##############

sentence: there are two yellow blocks as the base of a tower
model prediction:
log_prob = -1.71, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x
consistent
##############

sentence: there is a black or yellow triangle closely touching the bottom of a box
model prediction:
log_prob = -6.24, program = All filter ALL_ITEMS lambda_x_: AND is_black x is_touching_wall x Side.BOTTOM lambda_y_: AND is_black y is_triangle y
consistent
##############

sentence: there is a tower with exactly three blocks with a yellow block at the top
model prediction:
log_prob = -1.03, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x exist filter x lambda_y_: AND is_yellow y is_top y
consistent
##############

sentence: there is a box with 3 items and a yellow one on top
model prediction:
log_prob = -2.80, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x le 1 count filter x lambda_y_: AND is_yellow y is_top y
consistent
##############

sentence: there is a box with items of only black and blue color
model prediction:
log_prob = -3.15, program = exist filter ALL_BOXES lambda_x_: equal_int count query_color x count filter x lambda_y_: OR is_blue y all_same get_box_exclusive y
inconsistent
no consistent programs in beam
##############

sentence: there are 2 blue blocks
model prediction:
log_prob = -1.16, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_blue x equal x x
consistent
##############

sentence: there is exactly one tower which has a blue block over a black block
model prediction:
log_prob = -1.34, program = equal_int 1 count filter get_above filter ALL_ITEMS lambda_x_: is_black x lambda_y_: is_blue y
consistent
##############

sentence: there is a black item on top
model prediction:
log_prob = -1.46, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_black x is_top x
inconsistent
consistent program from beam : 
log_prob = -1.83, program = exist filter ALL_ITEMS lambda_x_: AND is_black x is_top x
##############

sentence: there is a box with 2 items and a yellow one touching the wall
model prediction:
log_prob = -4.81, program = exist filter ALL_BOXES lambda_x_: AND equal_int 2 count x equal_int 1 count filter ALL_ITEMS lambda_y_: AND is_yellow y is_touching_wall y Side.ANY
inconsistent
consistent program from beam : 
log_prob = -5.12, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_touching_wall x Side.ANY all_same get_box_exclusive x
##############

sentence: there are 2 boxes with a triangle closely touching a corner
model prediction:
log_prob = -4.01, program = equal_int 2 count filter ALL_ITEMS lambda_x_: AND is_triangle x is_touching_corner x Side.ANY
inconsistent
consistent program from beam : 
log_prob = -3.43, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count x
##############

sentence: there are two towers with more than one block where all the blocks are of same color
model prediction:
log_prob = -2.88, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count query_color filter x lambda_y_: equal y y
inconsistent
no consistent programs in beam
##############

sentence: there are two black items closely touching the bottom of a box
model prediction:
log_prob = -7.08, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: AND is_black x is_touching_wall x Side.BOTTOM lambda_y_: AND is_black y is_bottom y
consistent
##############

sentence: there is a yellow block on a blue block
model prediction:
log_prob = -1.92, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_yellow x lambda_y_: is_blue y
inconsistent
consistent program from beam : 
log_prob = -2.14, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_yellow y
##############

sentence: there are two yellow blocks as the base of a tower
model prediction:
log_prob = -1.71, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x
consistent
##############

sentence: there is at least one black block as the base of a tower
model prediction:
log_prob = -2.17, program = le 1 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_bottom y
consistent
##############

sentence: there is a box with 3 items of all 3 different colors
model prediction:
log_prob = -2.03, program = exist filter ALL_BOXES lambda_x_: equal_int 3 count query_color filter x lambda_y_: equal_int 3 count x
consistent
##############

sentence: none of the black triangles are touching a edge
model prediction:
log_prob = -1.40, program = NOT exist filter ALL_ITEMS lambda_x_: AND AND is_black x is_triangle x is_touching_wall x Side.ANY
consistent
##############

sentence: there are 2 black blocks
model prediction:
log_prob = -0.95, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_black x equal x x
consistent
##############

sentence: there is a box with 1 black and 1 blue item
model prediction:
log_prob = -3.58, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: AND is_blue y all_same filter get_box_inclusive y lambda_z_: is_black z
consistent
##############

sentence: there are at least three yellow triangles not touching any edge
model prediction:
log_prob = -2.84, program = le 3 count filter ALL_ITEMS lambda_x_: AND AND is_yellow x NOT is_touching_wall x Side.ANY is_triangle x
consistent
##############

sentence: there is a blue block as the base of a tower with more than two blocks
model prediction:
log_prob = -2.10, program = exist filter ALL_BOXES lambda_x_: AND lt 2 count x le 1 count filter x lambda_y_: AND is_blue y is_bottom y
consistent
##############

sentence: there is at least one tower which has a yellow block above a black block
model prediction:
log_prob = -2.51, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_black x lambda_y_: is_yellow y
consistent
##############

sentence: there is a box with all 3 colors and a black item on top
model prediction:
log_prob = -3.43, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count query_color x equal_int 1 count filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is exactly one yellow object touching the edge
model prediction:
log_prob = -1.05, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_touching_wall x Side.ANY
consistent
##############

sentence: there is no square closely touching the bottom of a box
model prediction:
log_prob = -3.35, program = NOT exist filter ALL_ITEMS lambda_x_: AND AND is_bottom x is_square x is_touching_wall x Side.BOTTOM
inconsistent
consistent program from beam : 
log_prob = -2.31, program = NOT exist filter ALL_ITEMS lambda_x_: AND AND is_square x is_touching_wall x Side.BOTTOM equal x x
##############

sentence: there are 3 blue blocks
model prediction:
log_prob = -1.42, program = equal_int count filter ALL_ITEMS lambda_x_: AND is_blue x equal x x 3
consistent
##############

sentence: there is 1 tower with blocks of all 3 colours
model prediction:
log_prob = -2.27, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 3 count query_color x
consistent
##############

sentence: there is a box with a blue triangle a yellow square and a yellow circle
model prediction:
log_prob = -4.84, program = exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_blue y is_circle y all_same filter x lambda_z_: is_yellow z
inconsistent
no consistent programs in beam
##############

sentence: there is a box with items of only one color
model prediction:
log_prob = -3.35, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: OR equal y y all_same query_color x
inconsistent
no consistent programs in beam
##############

sentence: there is a square closely touching a corner of a box
model prediction:
log_prob = -1.10, program = exist filter ALL_ITEMS lambda_x_: AND AND is_square x is_touching_wall x Side.ANY is_touching_corner x Side.ANY
consistent
##############

sentence: there is 1 tower with a black block at the top
model prediction:
log_prob = -2.44, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: two of the three towers has a blue base
model prediction:
log_prob = -2.05, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_bottom y
consistent
##############

sentence: there is a box with exactly two blue items and at least two black items
model prediction:
log_prob = -3.88, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_black y equal y y
inconsistent
no consistent programs in beam
##############

sentence: there are only two towers which has the same base color
model prediction:
log_prob = -5.32, program = equal_int count query_color filter ALL_ITEMS lambda_x_: AND is_bottom x all_same filter get_box_inclusive x lambda_y_: equal y y 2
inconsistent
consistent program from beam : 
log_prob = -4.02, program = equal_int 2 count filter ALL_ITEMS lambda_x_: AND equal x x all_same get_box_exclusive x
##############

sentence: there is a tower with a blue block above a blue block
model prediction:
log_prob = -0.99, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_blue y
consistent
##############

sentence: there is only one tower where the second block is black
model prediction:
log_prob = -1.65, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_black x all_same get_box_inclusive x
inconsistent
no consistent programs in beam
##############

sentence: there are two yellow items touching the wall
model prediction:
log_prob = -1.57, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_touching_wall x Side.ANY
consistent
##############

sentence: there is a tower with only three black blocks
model prediction:
log_prob = -1.10, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 3 count filter x lambda_y_: is_black y
consistent
##############

sentence: there is exactly one yellow circle not touching any edge
model prediction:
log_prob = -0.96, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x NOT is_touching_wall x Side.ANY lambda_y_: AND is_yellow y is_circle y
consistent
##############

sentence: there is a yellow square touching the side
model prediction:
log_prob = -1.82, program = exist filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_square x is_touching_wall x Side.ANY
consistent
##############

sentence: there are exactly three blue objects not touching any edge
model prediction:
log_prob = -0.62, program = equal_int 3 count filter ALL_ITEMS lambda_x_: AND is_blue x NOT is_touching_wall x Side.ANY
consistent
##############

sentence: there is a tower with a four block which has a blue block over a blue block
model prediction:
log_prob = -4.36, program = exist filter ALL_BOXES lambda_x_: equal_int count query_color x count filter get_above filter ALL_ITEMS lambda_y_: is_blue y lambda_z_: is_blue z
consistent
##############

sentence: there are two tower with different height and the base is yellow
model prediction:
log_prob = -1.61, program = equal_int 2 count filter ALL_ITEMS lambda_x_: AND is_yellow x all_same get_box_inclusive x
inconsistent
no consistent programs in beam
##############

sentence: there is a tower with four blocks
model prediction:
log_prob = -1.28, program = exist filter ALL_BOXES lambda_x_: equal_int 4 count x
consistent
##############

sentence: there is a tower with a black block over a blue block
model prediction:
log_prob = -1.18, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_black y
consistent
##############

sentence: there is a black square touching the base
model prediction:
log_prob = -2.58, program = exist filter ALL_ITEMS lambda_x_: AND AND is_black x is_square x is_touching_wall x Side.BOTTOM
consistent
##############

sentence: there is at least a yellow block as the top of a tower
model prediction:
log_prob = -2.46, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x
consistent
##############

sentence: there is a three blocks tower which has only one blue block
model prediction:
log_prob = -1.93, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: is_blue y
inconsistent
consistent program from beam : 
log_prob = -5.64, program = exist filter ALL_BOXES lambda_x_: equal_int 3 count query_color x
##############

sentence: there are two blue squares not touching any edge
model prediction:
log_prob = -1.95, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: AND is_blue x NOT is_touching_wall x Side.ANY lambda_y_: AND is_blue y is_square y
consistent
##############

sentence: there is exactly one black block as the top of a tower
model prediction:
log_prob = -0.79, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_black x is_top x lambda_y_: is_black y
consistent
##############

sentence: there is a box with a yellow square and at least two black items
model prediction:
log_prob = -4.39, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_yellow y all_same filter get_box_inclusive y lambda_z_: is_black z
inconsistent
consistent program from beam : 
log_prob = -4.97, program = exist filter ALL_BOXES lambda_x_: equal_int count query_color x count filter x lambda_y_: OR is_yellow y all_same filter get_box_inclusive y lambda_z_: is_black z
##############

sentence: there is one black triangle touching the base
model prediction:
log_prob = -2.16, program = le 1 count filter ALL_ITEMS lambda_x_: AND AND is_black x is_triangle x is_touching_wall x Side.BOTTOM
consistent
##############

sentence: there are exactly two towers with a yellow block at the top
model prediction:
log_prob = -1.35, program = equal_int 2 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x
consistent
##############

sentence: there are two towers having a yellow block at the base
model prediction:
log_prob = -1.84, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x
consistent
##############

sentence: there is a tower with a blue block over a yellow block
model prediction:
log_prob = -1.53, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_yellow x lambda_y_: is_blue y
consistent
##############

sentence: there is a tower with a yellow block over a blue block
model prediction:
log_prob = -1.55, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_yellow y
consistent
##############

sentence: there are two yellow circles touching the base
model prediction:
log_prob = -2.32, program = le 2 count filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_circle x is_touching_wall x Side.BOTTOM
consistent
##############

sentence: there is only one color touching the wall
model prediction:
log_prob = -1.69, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND AND all_same get_box_inclusive x is_touching_wall x Side.ANY equal x x
inconsistent
no consistent programs in beam
##############

sentence: there is a tower with four blocks
model prediction:
log_prob = -1.28, program = exist filter ALL_BOXES lambda_x_: equal_int 4 count x
consistent
##############

sentence: there are 2 black circles
model prediction:
log_prob = -1.85, program = le 2 count filter filter ALL_ITEMS lambda_x_: AND is_black x is_circle x lambda_y_: is_black y
consistent
##############

sentence: there is 1 tower with a black block at the top
model prediction:
log_prob = -2.44, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is a tower with a yellow block over a blue block
model prediction:
log_prob = -1.55, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_yellow y
consistent
##############

sentence: there are exactly three squares not touching any edge
model prediction:
log_prob = -1.11, program = equal_int 3 count filter ALL_ITEMS lambda_x_: AND is_square x NOT is_touching_wall x Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: there are 2 towers with a black block at the base
model prediction:
log_prob = -1.93, program = le 2 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_bottom y
inconsistent
consistent program from beam : 
log_prob = -2.38, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_bottom y
##############

sentence: there is a tower that has three the same blocks color
model prediction:
log_prob = -5.70, program = exist filter ALL_BOXES lambda_x_: equal_int 3 count query_color filter x lambda_y_: equal y y
inconsistent
no consistent programs in beam
##############

sentence: there is a box with multiple items and the two are black
model prediction:
log_prob = -1.18, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_black y equal y y
consistent
##############

sentence: there is an item that is touching the corner
model prediction:
log_prob = -2.14, program = exist filter ALL_ITEMS lambda_x_: AND equal x x is_touching_corner x Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: there is 1 tower with a yellow block and a blue block
model prediction:
log_prob = -4.14, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: AND is_blue y all_same filter get_box_inclusive y lambda_z_: is_yellow z
consistent
##############

sentence: there is a tower that the second block from the base is blue
model prediction:
log_prob = -1.39, program = exist filter ALL_ITEMS lambda_x_: AND is_blue x all_same get_box_inclusive x
inconsistent
no consistent programs in beam
##############

sentence: the tower with two blocks has a yellow block at the top
model prediction:
log_prob = -2.00, program = exist filter ALL_BOXES lambda_x_: AND le 2 count x equal_int 1 count filter x lambda_y_: AND is_yellow y is_top y
inconsistent
consistent program from beam : 
log_prob = -2.29, program = exist filter ALL_BOXES lambda_x_: AND equal_int 2 count x equal_int 1 count filter x lambda_y_: AND is_yellow y is_top y
##############

sentence: there are two towers that has two blue blocks
model prediction:
log_prob = -1.28, program = le 2 count filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: is_blue y
consistent
##############

sentence: there is 1 tower with a blue block at the base
model prediction:
log_prob = -2.42, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: is_blue y
consistent
##############

sentence: there are at least two towers with the same height
model prediction:
log_prob = -2.15, program = le 2 count filter ALL_ITEMS lambda_x_: AND equal x x all_same filter get_box_inclusive x lambda_y_: equal y y
inconsistent
no consistent programs in beam
##############

sentence: there are two towers with a blue block at the top
model prediction:
log_prob = -2.21, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: AND is_blue x is_top x lambda_y_: is_blue y
consistent
##############

sentence: there is 1 tower with 2 yellow blocks stacked together
model prediction:
log_prob = -4.39, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 2 count filter get_touching filter x lambda_y_: is_yellow y lambda_z_: is_yellow z
consistent
##############

sentence: there is 1 tower with a yellow block at the base
model prediction:
log_prob = -2.24, program = le 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: AND is_yellow y is_bottom y
consistent
##############

sentence: there is 1 tower with 3 yellow blocks
model prediction:
log_prob = -2.00, program = le 1 count filter ALL_BOXES lambda_x_: equal_int 3 count filter x lambda_y_: is_yellow y
consistent
##############

sentence: there is a box with a yellow item and three black items
model prediction:
log_prob = -2.75, program = exist filter ALL_BOXES lambda_x_: equal_int 3 count filter x lambda_y_: is_black y
inconsistent
consistent program from beam : 
log_prob = -1.78, program = exist filter ALL_BOXES lambda_x_: equal_int count query_color x count filter x lambda_y_: is_black y
##############

sentence: there is a tower with a yellow block below a different colored block
model prediction:
log_prob = -2.91, program = exist filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_yellow y all_same get_box_inclusive y
inconsistent
no consistent programs in beam
##############

sentence: there is a two blocks tower that has only one color
model prediction:
log_prob = -2.79, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter ALL_ITEMS lambda_y_: AND equal y y all_same query_color x
inconsistent
no consistent programs in beam
##############

sentence: there is exactly one tower with a black block at the top
model prediction:
log_prob = -1.31, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is a blue block as the top of a tower with at least two blocks
model prediction:
log_prob = -1.74, program = exist filter ALL_BOXES lambda_x_: AND le 2 count x equal_int 1 count filter x lambda_y_: AND is_blue y is_top y
consistent
##############

sentence: there is a box with a yellow circle and three blue items
model prediction:
log_prob = -4.79, program = exist filter ALL_BOXES lambda_x_: equal_int 3 count filter x lambda_y_: AND is_blue y all_same filter get_box_inclusive y lambda_z_: is_yellow z
consistent
##############

sentence: there is at least one yellow circle touching the edge
model prediction:
log_prob = -2.62, program = le 1 count filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_circle x is_touching_wall x Side.ANY
consistent
##############

sentence: there is a square touching the corner that is not yellow
model prediction:
log_prob = -4.95, program = NOT exist filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_square x is_touching_wall x Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: there is a blue block above a black block
model prediction:
log_prob = -1.68, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_black y
inconsistent
consistent program from beam : 
log_prob = -1.97, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_black x lambda_y_: is_blue y
##############

sentence: there is 1 tower with 1 yellow block at the top
model prediction:
log_prob = -2.50, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x lambda_y_: AND is_yellow y is_top y
consistent
##############

sentence: there is a circle with four items and the one is yellow
model prediction:
log_prob = -3.95, program = exist filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_circle x all_same get_box_inclusive x
consistent
##############

sentence: there is 1 tower with a blue block at the base
model prediction:
log_prob = -2.42, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: is_blue y
consistent
##############

sentence: there are two blue blocks as the base of a tower with at least two blocks
model prediction:
log_prob = -1.21, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_blue x is_bottom x
inconsistent
consistent program from beam : 
log_prob = -4.27, program = exist filter ALL_BOXES lambda_x_: AND equal_int 2 count x exist filter x lambda_y_: AND is_blue y is_bottom y
##############

sentence: there is a black tower with only one block
model prediction:
log_prob = -3.46, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_black x all_same get_box_inclusive x
consistent
##############

sentence: there is 1 tower with only blue and black blocks
model prediction:
log_prob = -5.18, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: OR is_black y is_blue y
inconsistent
consistent program from beam : 
log_prob = -2.89, program = exist filter ALL_BOXES lambda_x_: equal_int count query_color x count filter x lambda_y_: OR is_black y all_same get_box_exclusive y
##############

sentence: there is a black tower
model prediction:
log_prob = -1.40, program = All filter ALL_ITEMS lambda_x_: AND is_black x all_same get_box_inclusive x lambda_y_: is_black y
consistent
##############

sentence: each box has at least 1 black item
model prediction:
log_prob = -5.87, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_black x all_same get_box_inclusive x
inconsistent
consistent program from beam : 
log_prob = -1.13, program = All ALL_BOXES lambda_x_: exist filter x lambda_y_: is_black y
##############

sentence: there is a black block as the base of a tower with at least two blocks
model prediction:
log_prob = -1.15, program = exist filter ALL_BOXES lambda_x_: AND le 2 count x equal_int 1 count filter x lambda_y_: AND is_black y is_bottom y
consistent
##############

sentence: there is a box with a yellow triangle and 2 black squares
model prediction:
log_prob = -2.08, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_black y is_triangle y
inconsistent
consistent program from beam : 
log_prob = -2.12, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_black y is_square y
##############

sentence: there are two blue blocks as the base of a tower
model prediction:
log_prob = -1.36, program = equal_int 2 count filter ALL_ITEMS lambda_x_: AND is_blue x is_bottom x
consistent
##############

sentence: there is 1 box with 2 black circles
model prediction:
log_prob = -2.22, program = le 1 count filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_black y is_circle y
consistent
##############

sentence: there is one tower with a black block at the top
model prediction:
log_prob = -2.68, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there are exactly two black blocks as the top of a tower
model prediction:
log_prob = -1.37, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: AND is_black x is_top x lambda_y_: is_black y
consistent
##############

sentence: there are three black blocks as the base of a tower
model prediction:
log_prob = -2.91, program = equal_int 3 count filter ALL_ITEMS lambda_x_: AND is_black x is_bottom x
consistent
##############

sentence: there is a small blue square touching the wall
model prediction:
log_prob = -2.25, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND AND is_blue x is_square x is_touching_wall x Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: yellow block at the top
model prediction:
log_prob = -3.28, program = exist filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_top x all_same get_box_inclusive x
inconsistent
consistent program from beam : 
log_prob = -3.34, program = All filter ALL_ITEMS lambda_x_: AND is_yellow x is_top x lambda_y_: AND is_yellow y is_top y
##############

sentence: there is 1 box with a triangle closely touching a corner
model prediction:
log_prob = -3.74, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND AND is_triangle x is_touching_wall x Side.ANY is_touching_corner x Side.ANY
consistent
##############

sentence: there are two towers that has black block at the top
model prediction:
log_prob = -2.25, program = le 2 count filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: t least two of the towers ha yellow bases
model prediction:
log_prob = -2.68, program = le 2 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x lambda_y_: AND is_yellow y is_bottom y
consistent
##############

sentence: there is exactly one tower with a blue block at the base
model prediction:
log_prob = -1.97, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: is_blue y
consistent
##############

sentence: there is one tower with a block block at the top
model prediction:
log_prob = -2.98, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND AND is_top x all_same get_box_inclusive x all_same get_box_exclusive x
inconsistent
no consistent programs in beam
##############

sentence: there is a box with items of 2 different colors and a black square
model prediction:
log_prob = -4.78, program = exist filter ALL_BOXES lambda_x_: AND equal_int 2 count x equal_int 1 count filter x lambda_y_: AND is_black y is_square y
inconsistent
consistent program from beam : 
log_prob = -2.69, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: AND is_black y equal y y
##############

sentence: there is at least 1 tower with a blue block at the top
model prediction:
log_prob = -2.48, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_blue x is_top x
consistent
##############

sentence: there is 1 tower with a blue block at the base
model prediction:
log_prob = -2.42, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: is_blue y
consistent
##############

sentence: there is no yellow circle closely touching the bottom of a box
model prediction:
log_prob = -2.73, program = NOT exist filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_circle x is_touching_wall x Side.BOTTOM
consistent
##############

sentence: there is 1 tower with a blue block at the base
model prediction:
log_prob = -2.42, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: is_blue y
consistent
##############

sentence: there are exactly four circles not touching any edge
model prediction:
log_prob = -0.94, program = equal_int 4 count filter ALL_ITEMS lambda_x_: AND is_circle x NOT is_touching_wall x Side.ANY
consistent
##############

sentence: there is exactly one yellow triangle touching the edge
model prediction:
log_prob = -1.23, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x is_touching_wall x Side.ANY lambda_y_: AND is_yellow y is_triangle y
consistent
##############

sentence: there is a tower with a black block and two blue blocks
model prediction:
log_prob = -3.19, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: AND is_blue y all_same filter get_box_inclusive y lambda_z_: is_black z
consistent
##############

sentence: there is 1 box with only black items
model prediction:
log_prob = -2.53, program = le 1 count filter ALL_BOXES lambda_x_: equal_int count x count filter x lambda_y_: is_black y
consistent
##############

sentence: there is a tower with a yellow block below a yellow block at the top
model prediction:
log_prob = -1.88, program = exist filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_yellow y is_top y
inconsistent
no consistent programs in beam
##############

sentence: there is one tower having a black block over a blue block
model prediction:
log_prob = -1.75, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_black y
consistent
##############

sentence: there is ablue block on a black block
model prediction:
log_prob = -1.68, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_black y
inconsistent
consistent program from beam : 
log_prob = -1.97, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_black x lambda_y_: is_blue y
##############

sentence: the top of the three blocks tower is blue
model prediction:
log_prob = -2.04, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x exist filter x lambda_y_: AND is_blue y is_top y
consistent
##############

sentence: one of the grey square has exactly four objects
model prediction:
log_prob = -1.67, program = le 1 count filter ALL_BOXES lambda_x_: equal_int 4 count x
consistent
##############

sentence: there are at least two yellow squares not touching any edge
model prediction:
log_prob = -1.57, program = le 2 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x NOT is_touching_wall x Side.ANY lambda_y_: AND is_yellow y is_square y
consistent
##############

sentence: there is a tower with 2 blue blocks stacked together
model prediction:
log_prob = -3.40, program = exist filter ALL_BOXES lambda_x_: le 2 count filter get_touching filter x lambda_y_: is_blue y lambda_z_: is_blue z
consistent
##############

sentence: there is at least one black block on a blue block
model prediction:
log_prob = -1.43, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_black y
consistent
##############

sentence: there are two towers which has three and four blocks each
model prediction:
log_prob = -2.18, program = le 2 count filter ALL_BOXES lambda_x_: equal_int 3 count x
inconsistent
no consistent programs in beam
##############

sentence: there is exactly one tower with a black block at the top
model prediction:
log_prob = -1.31, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_black x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: the tower with four blocks has a black block at the top
model prediction:
log_prob = -1.60, program = exist filter ALL_BOXES lambda_x_: AND le 4 count x exist filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there is at least 1 yellow item in each box
model prediction:
log_prob = -3.63, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_yellow x all_same get_box_inclusive x
inconsistent
consistent program from beam : 
log_prob = -3.28, program = exist filter ALL_ITEMS lambda_x_: AND is_yellow x all_same filter get_box_inclusive x lambda_y_: is_yellow y
##############

sentence: there is a tower with only one object which is yellow
model prediction:
log_prob = -2.37, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_yellow x all_same get_box_inclusive x
consistent
##############

sentence: blue squares are not touching any edge
model prediction:
log_prob = -2.26, program = NOT exist filter ALL_ITEMS lambda_x_: AND AND is_blue x is_square x NOT is_touching_wall x Side.ANY
inconsistent
consistent program from beam : 
log_prob = -2.28, program = exist filter ALL_ITEMS lambda_x_: AND AND is_blue x is_square x NOT is_touching_wall x Side.ANY
##############

sentence: there are at least two circles touching the edge
model prediction:
log_prob = -1.44, program = le 2 count filter ALL_ITEMS lambda_x_: AND is_circle x is_touching_wall x Side.ANY
consistent
##############

sentence: there are 2 towers with a blue block at the top
model prediction:
log_prob = -2.21, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: AND is_blue x is_top x lambda_y_: is_blue y
consistent
##############

sentence: there is no tower with exactly two blocks
model prediction:
log_prob = -4.01, program = NOT exist filter ALL_BOXES lambda_x_: equal_int 2 count x
consistent
##############

sentence: there is a black tower with only one block
model prediction:
log_prob = -3.46, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_black x all_same get_box_inclusive x
consistent
##############

sentence: there is exactly one tower with a blue block at the base
model prediction:
log_prob = -1.97, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: is_blue y
consistent
##############

sentence: there is a yellow block as the top of a tower with exactly three blocks
model prediction:
log_prob = -1.55, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x le 1 count filter x lambda_y_: AND is_yellow y is_top y
consistent
##############

sentence: one of the grey square contains exactly one object
model prediction:
log_prob = -1.45, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count x
consistent
##############

sentence: there is exactly one square closely touching the bottom of a box
model prediction:
log_prob = -4.12, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND AND is_bottom x is_square x is_touching_wall x Side.BOTTOM
consistent
##############

sentence: there are two black triangles not touching any edge
model prediction:
log_prob = -1.34, program = le 2 count filter filter ALL_ITEMS lambda_x_: AND is_black x NOT is_touching_wall x Side.ANY lambda_y_: AND is_black y is_triangle y
consistent
##############

sentence: there are exactly two black squares not touching any edge
model prediction:
log_prob = -2.00, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: AND is_black x NOT is_touching_wall x Side.ANY lambda_y_: AND is_black y is_square y
consistent
##############

sentence: one of the grey square contains exactly three objects
model prediction:
log_prob = -1.49, program = equal_int 1 count filter ALL_BOXES lambda_x_: equal_int 3 count x
consistent
##############

sentence: there is a box with a blue circle and a blue triangle
model prediction:
log_prob = -6.42, program = exist filter ALL_BOXES lambda_x_: AND exist filter x lambda_y_: AND is_blue y is_circle y all_same filter x lambda_z_: is_triangle z
inconsistent
no consistent programs in beam
##############

sentence: there is 1 tower with 1 blue block at the base
model prediction:
log_prob = -2.22, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: is_blue y
consistent
##############

sentence: there is a black block as the top of a tower with at least two blocks
model prediction:
log_prob = -1.19, program = exist filter ALL_BOXES lambda_x_: AND le 2 count x equal_int 1 count filter x lambda_y_: AND is_black y is_top y
consistent
##############

sentence: there are exactly two blue squares not touching the edge
model prediction:
log_prob = -1.48, program = equal_int 2 count filter filter ALL_ITEMS lambda_x_: AND is_blue x NOT is_touching_wall x Side.ANY lambda_y_: AND is_blue y is_square y
consistent
##############

sentence: there is 1 box with only blue and yellow items
model prediction:
log_prob = -4.93, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: OR is_yellow y is_blue y
inconsistent
no consistent programs in beam
##############

sentence: one of the grey box has exactly six objects
model prediction:
log_prob = -1.40, program = le 1 count filter ALL_BOXES lambda_x_: equal_int 6 count x
consistent
##############

sentence: ll blue items are in the same box
model prediction:
log_prob = -5.37, program = All filter ALL_ITEMS lambda_x_: AND is_blue x all_same get_box_inclusive x lambda_y_: equal y y
inconsistent
no consistent programs in beam
##############

sentence: there is no yellow item closely touching right wall of a box
model prediction:
log_prob = -1.74, program = NOT exist filter ALL_ITEMS lambda_x_: AND is_yellow x is_touching_wall x Side.RIGHT
consistent
##############

sentence: there is a box which a blue triangle and at least two black items
model prediction:
log_prob = -6.50, program = exist filter ALL_BOXES lambda_x_: AND le 2 count filter ALL_ITEMS lambda_y_: AND is_black y is_triangle y all_same filter x lambda_z_: is_black z
inconsistent
consistent program from beam : 
log_prob = -4.62, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: OR is_black y all_same filter get_box_inclusive y lambda_z_: is_black z
##############

sentence: there is a black triangle touching the wall
model prediction:
log_prob = -2.37, program = exist filter ALL_ITEMS lambda_x_: AND AND is_black x is_triangle x is_touching_wall x Side.ANY
consistent
##############

sentence: one of the grey square contains exactly five objects
model prediction:
log_prob = -1.80, program = le 1 count filter ALL_BOXES lambda_x_: equal_int 5 count x
consistent
##############

sentence: there is a yellow square touching the wall
model prediction:
log_prob = -2.21, program = exist filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_square x is_touching_wall x Side.ANY
consistent
##############

sentence: there is a box with items of only one color
model prediction:
log_prob = -3.35, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: OR equal y y all_same query_color x
inconsistent
no consistent programs in beam
##############

sentence: there is exactly one black triangle not touching any edge
model prediction:
log_prob = -1.40, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: AND is_black x NOT is_touching_wall x Side.ANY lambda_y_: AND is_black y is_triangle y
consistent
##############

sentence: the top of the two four block towers are yellow
model prediction:
log_prob = -3.14, program = exist filter ALL_BOXES lambda_x_: AND equal_int 4 count x le 2 count filter ALL_ITEMS lambda_y_: AND is_yellow y is_top y
inconsistent
no consistent programs in beam
##############

sentence: there is at least 1 tower with a yellow block at the base
model prediction:
log_prob = -1.91, program = le 1 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x is_bottom x lambda_y_: AND is_yellow y is_bottom y
consistent
##############

sentence: there is a blue square on top of other items
model prediction:
log_prob = -1.63, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: OR is_blue y all_same get_box_inclusive y
inconsistent
no consistent programs in beam
##############

sentence: there is a black square touching the wall with a blue squere right on top of it
model prediction:
log_prob = -3.17, program = exist filter ALL_ITEMS lambda_x_: AND AND is_blue x is_square x is_touching_wall x Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: there is one tower with a blue block over a yellow block
model prediction:
log_prob = -3.19, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_yellow x lambda_y_: is_blue y
consistent
##############

sentence: there is a box with a black square touching the wall and another one on top of it all
model prediction:
log_prob = -3.81, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND is_black x is_touching_wall x Side.ANY
consistent
##############

sentence: the base of a three blocks tower is yellow
model prediction:
log_prob = -1.56, program = exist filter ALL_BOXES lambda_x_: AND equal_int 3 count x exist filter x lambda_y_: AND is_yellow y is_bottom y
consistent
##############

sentence: there is at least one tower having a yellow block over a yellow block
model prediction:
log_prob = -1.45, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_yellow x lambda_y_: is_yellow y
consistent
##############

sentence: there is a box with only two black and blue items
model prediction:
log_prob = -2.00, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count filter x lambda_y_: is_blue y
inconsistent
consistent program from beam : 
log_prob = -2.18, program = exist filter ALL_BOXES lambda_x_: equal_int 1 count filter x lambda_y_: is_blue y
##############

sentence: there is a tower which has only two blocks
model prediction:
log_prob = -2.24, program = exist filter ALL_BOXES lambda_x_: equal_int 2 count x
consistent
##############

sentence: there are 3 yellow items touching the wall and at least one small circle nearly touching the wall
model prediction:
log_prob = -4.98, program = le 3 count filter filter ALL_ITEMS lambda_x_: AND is_yellow x is_touching_wall x Side.ANY lambda_y_: is_circle y
inconsistent
consistent program from beam : 
log_prob = -2.67, program = equal_int 3 count filter filter ALL_ITEMS lambda_x_: AND is_circle x is_touching_wall x Side.ANY lambda_y_: equal y y
##############

sentence: there is at least one black object above a blue object
model prediction:
log_prob = -1.43, program = le 1 count filter get_above filter ALL_ITEMS lambda_x_: is_blue x lambda_y_: is_black y
consistent
##############

sentence: ll 3 different colors are touching the wall
model prediction:
log_prob = -4.63, program = equal_int 3 count filter filter ALL_ITEMS lambda_x_: AND NOT all_same get_box_exclusive x is_touching_wall x Side.ANY lambda_y_: equal y y
inconsistent
no consistent programs in beam
##############

sentence: there is 1 black circle
model prediction:
log_prob = -2.14, program = le 1 count filter ALL_ITEMS lambda_x_: AND is_black x is_circle x
consistent
##############

sentence: there is a box with 2 yellow squares not touching the wall
model prediction:
log_prob = -3.33, program = equal_int 1 count filter ALL_ITEMS lambda_x_: AND AND is_yellow x is_square x NOT is_touching_wall x Side.ANY
inconsistent
no consistent programs in beam
##############

sentence: there is 1 tower with 1 yellow block at the base
model prediction:
log_prob = -2.09, program = equal_int 1 count filter filter ALL_ITEMS lambda_x_: is_bottom x lambda_y_: AND is_yellow y is_bottom y
consistent
##############

sentence: there is a black block on a yellow block
model prediction:
log_prob = -1.82, program = exist filter get_above filter ALL_ITEMS lambda_x_: is_yellow x lambda_y_: is_black y
consistent
##############

sentence: there is a blue block as the base of a tower
model prediction:
log_prob = -1.63, program = exist filter ALL_ITEMS lambda_x_: AND is_blue x is_bottom x
consistent
##############

sentence: there is a box with 4 items and 2 yellow squares in the middle
model prediction:
log_prob = -4.92, program = exist filter ALL_BOXES lambda_x_: AND equal_int 4 count x le 2 count filter x lambda_y_: AND is_yellow y equal y y
consistent
##############

sentence: there is a box with a yellow item touching the wall with a black and yellow item on top of it
model prediction:
log_prob = -4.64, program = exist filter get_above filter ALL_ITEMS lambda_x_: equal_int 1 count filter get_touching x lambda_y_: is_yellow y lambda_z_: is_black z
inconsistent
consistent program from beam : 
log_prob = -3.70, program = exist filter ALL_BOXES lambda_x_: exist filter x lambda_y_: AND is_yellow y all_same get_box_inclusive y
##############

