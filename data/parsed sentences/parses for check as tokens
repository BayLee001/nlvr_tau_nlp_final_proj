1. There are exactly four ALL_ITEMS not touching any edge

	equal 4 count filter ALL_ITEMS  lambda_x_:  NOT is_touching_wall x Side.ANY     
	
	equal_int 4 count filter ALL_ITEMS  lambda_x_:  NOT is_touching_wall x Side.ANY      
	
	# same as mine but the syntax of lambda
	
	# equal_int 4 count filter ALL_ITEMS lambda_x_:not touchwall x
	

2. There is a box with at least one square and at least three triangles.
	
	exist filter ALL_BOXES  lambda_y_:   AND le 1  count filter y  lambda_x_:  is_square x      le 3  count filter y  lambda_z_:     is_triangle z       

3. There is a tower with yellow base.

	exist filter ALL_BOXES  lambda_x_:  exist filter filter x  lambda_y_:   is_bottom y    lambda_z_:     is_yellow z     
	exist filter ALL_BOXES  lambda_x_:  exist filter x  lambda_y_:   AND  is_bottom y   is_yellow y      
	exist filter ALL_BOXES  lambda_x_:  is_yellow unique filter x  lambda_y_:   is_bottom y      
	
4. There is a black item in every box.
	
	All ALL_BOXES  lambda_x_:  exist filter x  lambda_y_:   is_black y    
	
5. There are 2 blue circles and 1 blue triangle

	AND equal 2 count filter filter ALL_ITEMS  lambda_y_:   is_blue y    lambda_x_:  is_circle x      equal 1 count filter filter ALL_ITEMS  lambda_z_:     is_blue z    lambda_w_:     is_triangle w     
	AND equal 2 count filter ALL_ITEMS  lambda_y_:   AND is_blue y   is_circle y       equal 1 count filter ALL_ITEMS  lambda_z_:     AND is_blue z   is_triangle z      	

	
6. There is a blue triangle touching the wall with its side.
	
	#exist filter ALL_ITEMS  lambda_x_:  AND is_blue x  AND is_triangle x  is_touching_wall x Side.ANY    
	exist filter ALL_ITEMS  lambda_x_:  AND is_blue x  AND is_triangle x  is_touching_wall x  Side.BOTTOM     
	exist filter filter filter ALL_ITEMS  lambda_x_:  is_blue x    lambda_y_:  is_triangle y    lambda_z_:     is_touching_wall z  Side.BOTTOM   

	# note that "with its side" is understool as the triangle's 'TZELA'

	
7. there is one tower with a yellow block above a yellow block 
	
	#equal 1 count filter lambda_z_:    filter lambda_y_:  yellow y  filter lambda_x_: square x  relate above filter lambda_y_:  yellow y  filter lambda_x_: square x  z      ALL_BOXES   
	#equal 1 count filter lambda_z_:    filter lambda_y_:  AND yellow y  square y   relate above filter AND yellow y  square y   z    ALL_BOXES   
	le 1  count filter ALL_BOXES  lambda_x_: exist filter get_above filter x  lambda_y_:  is_yellow y     lambda_z_:     is_yellow z      
	
8. There are two towers that has different base color but the same color in the second block.

	#exist Lxlambda_y_:  AND NOT same union color bottom x   color bottom y      same union color relate above bottom x    relate above color bottom y       pairs ALL_BOXES  
	
	
	#le 2  count argmax lambda_x_: count x   filter lambda_z_:     AND NOT same color bottom z      same color second z      powerset ALL_BOXES     
	
	#exist filter lambda_z_:    AND equal_color query_color unique filter_location base  get_by_index z  1      query_color unique filter_location base  get_by_index z  2      NOT equal_color query_color unique filter_location second  get_by_index z  1      query_color unique filter_location second  get_by_index z  2         select 2  all_ALL_BOXES   

	exist filter select ALL_BOXES  2   lambda_x_: AND NOT all_same query_color filter union_all x   lambda_y_:   is_bottom y       all_same query_color filter union_all x   lambda_z_:     is_second z       

9. There is a box with seven items and the three black items are the same in shape

	AND exist filter ALL_BOXES  lambda_x_:   equal 7 count x       exist filter select filter ALL_ITEMS  lambda_y_:   is_black y    3   lambda_z_:    all_same query_shape z     

	
10. there is exactly one black triangle not touching the edge

	equal 1 count filter filter filter ALL_ITEMS  lambda_y_:   is_black y    lambda_x_:  is_triangle x    lambda_z_:    NOT is_touching_wall z Side.ANY    
	equal 1 count filter ALL_ITEMS  lambda_x_:  AND NOT is_touching_wall x Side.ANY  AND is_black x   is_triangle x      
	
	
11. t least two boxes have the same number of objects each and the same number of object touching the side.
	
	exist filter select ALL_BOXES 2   lambda_x_:  AND all_same_attribute x  lambda_y_:   count y    all_same_attribute x  lambda_z_:    count filter z  lambda_w_:    is_touching_wall w       
	#exist Lxlambda_y_:  AND equal count x  count y   equal count filter lambda_z_:    touchwall z  x   count filter lambda_w_:    touchwall w  y     pairs ALL_BOXES  
	
	#le 2  count argmax lambda_x_: count x   filter lambda_z_:     AND same color bottom z      same color second z      powerset ALL_BOXES     
	
	#exist lambda_y_:  AND equal_integer count get_by_index y 1   count get_by_index y 2    equal_integer count filter lambda_x_: query_touching_wall x    get_by_index y 1     count filter lambda_x_: query_touching_wall x    get_by_index y 2         select 2  all_ALL_BOXES  	


12. There is a box with only blue and yellow items of which there are only yellow squares.

	exist filter ALL_BOXES  lambda_x_:  AND All x  lambda_y_:   OR is_blue y   AND is_yellow y   is_square y      equal 2 count query_color x      
	
		

13. there is at least one tower with four blocks with a yellow block at the base and a blue block below the top block

	exist filter ALL_BOXES  lambda_x_:  AND equal 4 count x    AND  exist filter x  lambda_y_:   AND is_bottom y   is_yellow y      exist filter get_below filter x  lambda_z_:     is_top z     lambda_w_:     is_blue w       
	
	# this is not correct - you switched blue and yellow and ignored the word *below
	
	#le 1 count filter lambda_y_: AND equal_integer 4  count y    AND equal_color yellow  query_color unique filter_location base  y     equal_color blue  query_color unique relate below  unique filter_location top  y            all_ALL_BOXES   
	#le 1 count filter lambda_y_: AND equal_integer 4  count y    AND exist filter_color yellow  filter_location base  y     exist filter_color blue  relate below  unique filter_location top  y          all_ALL_BOXES   


14. There is a four block tower where the base and second blocks are the same in color.

	exist filter ALL_BOXES  lambda_x_:  AND equal 4 count x    equal query_color filter x  lambda_y_:  is_bottom y    query_color filter x  lambda_z_:    is_second z       

	exist filter ALL_BOXES  lambda_x_:  AND equal 4 count x    all_same query_color filter x  lambda_y_:  OR is_bottom y   is_second y        
	
	# exist lambda_x_: AND equal 4 count x   equal color union bottom x   relate above bottom x       ALL_BOXES 
	
	#exist filter lambda_y_: AND equal_integer 4  count y    equal_color query_color unique filter_location base  y     query_color unique filter_location second  y        all_ALL_BOXES  



15. There is a blue block as the base of a tower with at most three blocks.

	exist filter ALL_BOXES  lambda_x_:  AND ge 3  count x    exist filter x  lambda_y_:   AND is_blue y  is_bottom y       
	
	exist filter ALL_ITEMS  lambda_x_:  AND is_blue x   AND is_bottom x   ge 3  count get_box_inclusive x       
	
	# again problem with the definition of bottom
	
	#exist filter lambda_x_: ge 3  count get_box_inclusive x      filter_location base filter_color blue all_ALL_ITEMS    
	#exist filter lambda_y_:  AND ge 3  count y    equal_color blue query_color unique filter_location base  y        all_ALL_BOXES  
	

16. There is a box with all 3 different colors and a black triangle touching the wall with its top.

	exist filter ALL_BOXES  lambda_x_:  AND equal 3  count query_color x     exist filter x  lambda_y_:   AND is_black y   AND is_triangle y   is_touching_wall y  Side.TOP        
	
	#exist lambda_x_: AND AND exist lambda_y_:  blue y  x  exist lambda_z_:    yellow z  x   AND exist lambda_w_:    black w  x  exist lambda_u_:    AND black u  AND triangle u  touchwall u    x    ALL_BOXES 
	
	#exist filter ALL_BOXES  lambda_x_:  AND equal 3 count color x     exist filter x  lambda_y_:   AND black y   AND triangle y   touching_top_wall y         
	
	#exist filter lambda_y_:  AND equal_set query_color_set y   AllColors   exist filter lambda_x_: query_touching_top_wall x    filter_color black filter_shape triangle  y       all_ALL_BOXES  

	
17. There is a box with multiple items and only one item has a different color

	#exist lambda_x_: AND greater_equal 2 count x   equal 1 diff count x  countsame color x      ALL_BOXES 
	
	exist filter ALL_BOXES  lambda_x_:  AND le 3 count x    equal 1  count filter x  lambda_y_:   NOT contained query_color y   query_color get_box_exclusive y          
	
	
	#exist filter lambda_y_: AND le 3  count y    equal_integer 1  count filter lambda_x_: AND all_same_color get_box_exclusive x    NOT MemberOf query_color x   query_color_set get_box_exclusive x        y      all_ALL_BOXES  
	#exist filter lambda_y_: AND le 3  count y    equal_integer 1  count filter lambda_x_: all_same_color get_box_exclusive x     y      all_ALL_BOXES  
	#exist filter lambda_y_: AND le 3  count y    equal_integer 1  count filter lambda_x_:all_same_color symmetric_difference y  MakeSet x      y      all_ALL_BOXES  

	
	

20. there is a box with 2 items at most of which one is a triangle

	#exist filter ALL_BOXES  lambda_x_: AND ge count x  2  equal 1 count filter x  lambda_y_:  triangle y       
	
	#final 
	exist filter ALL_BOXES  lambda_x_:   lambda_z_:     AND ge 2  count z     equal 1  count filter z  lambda_w  is_triangle w        x   
	

21. there is a four block tower and the top block is blue

	
	#final
	exist filter ALL_BOXES  lambda_x_:  AND equal 4 count x   exist filter x  lambda_y_:  AND is_blue y  is_top y       
	exist filter ALL_BOXES  lambda_x_:  AND equal 4 count x    is_blue unique filter x. lambda_y_:  is_top y       

22. there is a box with a yellow item and only black items on top of it

	
	# final
	exist filter ALL_BOXES  lambda_x_:  exist filter x  lambda_y_:   AND is_yellow y   All get_above y   lambda_z_:     is_black z        
	
	
23. at least one of the tower with four blocks has exactly same color block at the top and base

	
	#final
	le 1  count filter filter ALL_BOXES  lambda_x_:  equal 4  count x     lambda_y_:   all_same query_color filter y  lambda_z_:     OR is_top z   is_bottom z        
	le 1  count filter filter ALL_BOXES  lambda_x_:  equal 4  count x     lambda_y_:   equal query_color filter y  lambda_z_:     is_top z     query_color filter y  lambda_w_:    is_bottom w       

	
24. there is a box with at least three black item of the same shape

	#exist lambda_x_: greater_equal 3 countsame shape filter lambda_y_:  black y  x     boxes 
	
	exist filter ALL_BOXES  lambda_x_: le 3  countsame query_shape filter x  lambda_y_:  black y       
	#exist filter boxes  lambda_x_: le 3 count argmax lambda_y_:   count y   filter powerset x  lambda_w_:     AND all w  lambda_z_:     black z    allsame shape w          
	
	
	#exist filter boxes  lambda_x_: exist powerset x  lambda_y_:   AND le 3  count y    AND all y  lambda_z_:     black z    allsame shape y       
	

25. there are 2 yellow items touching each other

	le count 2  filter ALL_ITEMS  lambda_x_:  AND is_yellow x   exist filter get_touching x   lambda_y_:  is_yellow y        

	#exist Lxlambda_y_:  touch x y  pairs filter lambda_z_:    yellow z  objects   
	
	#le 2  count argmax lambda_y_:   count y   filter powerset filter all_items  lambda_x_:  yellow x     lambda_w_:     touching w      --- bad!
	
	#le 2  count filter relate touch  filter all_items  lambda_x_:  yellow x     lambda_y_:   yellow y    
	
	
	
26. there is a box with a yellow item and 2 black item touching each other

	#exist lambda_x_: AND exist lambda_y_:  yellow y  x  exist Lulambda_v_:    touch u v  pairs filter lambda_z_:    black z  x     boxes 
	
	exist filter boxes  lambda_z_:     AND exist z  filter lambda_w_:     is_yellow w     le 2  count filter get_touching filter z  lambda_x_:  is_black x     lambda_y_:   is_black y       
